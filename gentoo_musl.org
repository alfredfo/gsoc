#+TITLE: Gentoo GSoC Application
#+AUTHOR: Alfred Persson Forsberg <cat@catcream.org>
#+DATE:
#+OPTIONS: toc:nil
#+LATEX_HEADER: \usepackage[margin=1.0in]{geometry}
* Gentoo GSoC Application

** Abstract
musl is a simple libc implementation focused on being secure and standard comformant.
It provdes C bindings for interacting with Linux interfaces as well as pure C functions such as strstr and sqrt.
musl claims to be both forward and backwards compatible between releases and it is much smaller and lighter than glibc.

** Objective
The goal of this project is to improve the number of packages to run with musl libc on Gentoo, with a focus on desktop and development use-cases.
Primarily the Plasma desktop environment along with the KDE Applications and QT libraries.


As musl is developed with security in mind I hope this project will make it become the default libc implementation for Gentoo hardened desktops.
I also hope that more binary packages (*-bin) will become statically linked with musl for ensuring compatibility with every setup, regardless of the system libc implementation.

To make this switch as painless as possible for users I will also write documentation for glibc compatibility for software where the source code
is not available / software which does not yet build with musl.


** Deliverables
+ Full KDE Plasma desktop and QT libraries (qtwebengine!), focus on Wayland and PipeWire. 
+ Web browsers, qutebrowser should just work with qtwebengine ported.

This project when finished will consist of:
+ Patches (.patch files) for software where upstream cannot yet build with musl.
  Though getting the patches merged upstream is ideal.
+ Documentation for other developers who want to contribute and port software for musl.
  Extending [1].
+ Documentation for users who want to run glibc software (inside a Gentoo/glibc chroot).
  Extending [2] with documentation for running desktop applications with sound and graphics. Including PipeWire, Wayland, X & PulseAudio.
+ A lot of git commits to ::musl
+ A simple blog with my progress! I will put everything there and then rewrite important parts as documentation on the Gentoo wiki.


** Timeline
Expected 175 hours.
Further info after discussion with mentor.

1. Getting core libraries ported so Plasma can build correctly.
2. The Plasma desktop itself, starting with the basic parts like the window manager.
   Then making sure other essential parts like the dock, settings panel and status bar function correctly.
3. A web browser, probably something based on qtwebengine like qutebrowser.
4. Working out KDE Plasma bugs and porting other KDE applications.

Documentation will be written continuously during the project.


** Biography
Hello! My name is Alfred. I am a Swedish 19 year old and I've been a Gentoo user for around 1.5 years now comming from Windows and macOS.
I think Gentoo is an awesome operating system because it gives the user so much control.
I currently run Gentoo/musl on my laptop with Sway and Pipewire with the intent of also putting it on my espressobin router as well.
I am a student currently studying first year of electrical engineering at Chalmers University of Technology.
In high school I studied science with mathematical specialization at Hvitfeldtska (standard science programme + 4 extra math courses in
logic, problem solving, calculus, etc.)
I will therefore also work on getting CAD software, typesetting software like *TeX, Octave and software for my router to work on musl,
although that is not included in this project so I can have a reasonable scope and clear deliverables. 
Since I was a kid I've always had an interest in computer software, specifically how to break it and make it do whatever you want.
My first step into programming and computer science was with game hacking. When I was in 7th grade (13 years old) I downloaded source code for
cheats, I was curious how it worked so I started to experiment with it by for example rewriting parts of the program and adding functionality by mostly
looking at other projects.
Having almost never coded before I got hooked to an extreme level and I wanted to learn more and more, which made me learn C++ quickly.
Game hacking was also my first step into debugging, assembly and operating system programming, which has been useful since.
After starting high school I pretty much stopped working on large projects due to lack of time and I hope GSoC can change that!

I've never seriously contributed to free software projects and most patches or knowledge I've just kept to myself instead of sharing it with others.
I really hope Google Summer of Code can change that and I hope to later become part of the Gentoo team.

** References
[1] https://wiki.gentoo.org/wiki/User:Sam/Musl_porting_notes
[2] https://wiki.gentoo.org/wiki/Chroot
